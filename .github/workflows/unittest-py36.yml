name: Unittest Python 3.6

on:
  workflow_dispatch:

  push:
    branches: [main, legacy6, legacy7, legacy8]
    paths:
      - '**.py'
      - '.github/workflows/unittests.yml'
  pull_request:
    branches: [main, legacy6, legacy7, legacy8]
    paths:
      - '**.py'
      - '.github/workflows/unittests.yml'

concurrency:
  group: unittests-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  unittests:

    name: ${{ matrix.os }}+py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        python-version: [3.6]

    steps:

    - name: Checkout ${{ github.ref }}
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Identify precise Python version
      id: full-python-version
      shell: bash
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Cache Python env for ${{ matrix.os }}-py${{ steps.full-python-version.outputs.version }}
      uses: actions/cache@v4
      with:
        path: ${{ env.pythonLocation }}
        key: new-${{ matrix.os }}-py${{ steps.full-python-version.outputs.version }}-${{ hashFiles('requirements-nogui.txt') }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade --upgrade-strategy eager pip setuptools wheel babel
        if [ -f requirements-nogui.txt ]; then pip install --upgrade --upgrade-strategy eager -r requirements-nogui.txt; fi

    - name: List environment
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
        JOB_CONTEXT: ${{ toJSON(job) }}
        STEPS_CONTEXT: ${{ toJSON(steps) }}
        RUNNER_CONTEXT: ${{ toJSON(runner) }}
        STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        MATRIX_CONTEXT: ${{ toJSON(matrix) }}
      run: |
        pip list
        env

    - name: Run Unittests
      run: |
        python -m unittest discover test -v
        if ${{ matrix.experimental }} == true; then
            exit 0
        fi
